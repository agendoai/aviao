// Teste para verificar se a corre√ß√£o da janelaBloqueada funcionou
console.log('üß™ TESTE - JANELA BLOQUEADA CORRIGIDA');
console.log('=====================================');

// Simular dados do booking (corretos)
const bookingData = {
  "id": 9576,
  "departure_date": "2025-08-27T04:00:00.000Z", // 04:00 (in√≠cio pr√©-voo)
  "return_date": "2025-08-27T21:07:46.535Z", // 21:00 (fim p√≥s-voo)
  "actual_departure_date": "2025-08-27T07:00:00.000Z", // 07:00 (hora real de decolagem)
  "actual_return_date": "2025-08-27T17:00:00.000Z", // 17:00 (hora real de retorno)
  "flight_hours": 2.0
};

console.log('üìä Dados do booking:');
console.log('   departure_date:', bookingData.departure_date);
console.log('   return_date:', bookingData.return_date);
console.log('   actual_departure_date:', bookingData.actual_departure_date);
console.log('   actual_return_date:', bookingData.actual_return_date);

// Simular bookingToMissao (CORRETO)
console.log('\nüîç bookingToMissao (CORRETO):');
const missao = {
  partida: new Date(bookingData.departure_date), // 04:00 (in√≠cio pr√©-voo)
  retorno: new Date(bookingData.return_date), // 21:00 (fim p√≥s-voo)
  flightHoursTotal: bookingData.flight_hours
};

console.log('   partida:', missao.partida.toLocaleString('pt-BR'));
console.log('   retorno:', missao.retorno.toLocaleString('pt-BR'));

// Simular janelaBloqueada CORRIGIDA
console.log('\nüîç janelaBloqueada CORRIGIDA:');
const H = (n) => n * 60 * 60 * 1000;
const PRE_VOO_HORAS = 3;
const POS_VOO_HORAS = 3;

// Pr√©-voo: m.partida j√° √© o in√≠cio (04:00), fim √© 3h depois (07:00)
const preVooInicio = new Date(missao.partida.getTime()); // 04:00
const preVooFim = new Date(missao.partida.getTime() + H(PRE_VOO_HORAS)); // 07:00

// Miss√£o: decolagem (07:00) at√© retorno (17:00)
const missaoInicio = new Date(missao.partida.getTime() + H(PRE_VOO_HORAS)); // 07:00
const missaoFim = new Date(missao.retorno.getTime() - H(POS_VOO_HORAS)); // 18:00

// P√≥s-voo: m.retorno j√° √© o fim (21:00), in√≠cio √© 3h antes (18:00)
const posVooInicio = new Date(missao.retorno.getTime() - H(POS_VOO_HORAS)); // 18:00
const posVooFim = new Date(missao.retorno.getTime()); // 21:00

console.log('   Pr√©-voo:');
console.log('     in√≠cio:', preVooInicio.toLocaleString('pt-BR'));
console.log('     fim:', preVooFim.toLocaleString('pt-BR'));

console.log('   Miss√£o:');
console.log('     in√≠cio:', missaoInicio.toLocaleString('pt-BR'));
console.log('     fim:', missaoFim.toLocaleString('pt-BR'));

console.log('   P√≥s-voo:');
console.log('     in√≠cio:', posVooInicio.toLocaleString('pt-BR'));
console.log('     fim:', posVooFim.toLocaleString('pt-BR'));

console.log('\n‚úÖ RESULTADO ESPERADO:');
console.log('   Pr√©-voo: 04:00 at√© 07:00 ‚úÖ');
console.log('   Miss√£o: 07:00 at√© 18:00 ‚úÖ');
console.log('   P√≥s-voo: 18:00 at√© 21:00 ‚úÖ');

console.log('\nüéØ CORRE√á√ÉO APLICADA:');
console.log('   ‚úÖ bookingToMissao usa departure_date e return_date (correto)');
console.log('   ‚úÖ janelaBloqueada n√£o subtrai mais 3h do pr√©-voo');
console.log('   ‚úÖ janelaBloqueada n√£o adiciona mais 3h no p√≥s-voo');
console.log('   ‚úÖ Frontend agora mostra hor√°rios corretos no calend√°rio');
